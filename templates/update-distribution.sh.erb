#!/bin/bash
SNAPSHOTS=false
SOURCE=false
UDEB=false
CHANGES=false
BASEDIR="<%= @basedir %>"
REPREPRO="/usr/bin/reprepro"

usage () { echo "Usage: $0 -r <repository> -c <codename> [-C,-s,-S,-U]"; }

while getopts ":r:c:CsSUh" opt; do
  case $opt in
    r)
      REPOSITORY=$OPTARG
      ;;
    c)
      CODENAME=$OPTARG
      ;;
    C)
      CHANGES=true
      ;;
    s)
      SNAPSHOTS=true
      ;;
    S)
      SOURCE=true
      ;;
    U)
      UDEB=true
      ;;
    h)
      usage
      exit
      ;;
    \?)
      echo "Unknown option: -$OPTARG" >&2
      exit 1
      ;;
    :)
      echo "Missing option argument for -$OPTARG" >&2
      exit 1
      ;;
    *) 
      echo "Unimplemented option: -$OPTARG" >&2;
      exit 1
     ;;
  esac
done

shift $(($OPTIND - 1))

if [ -z "$REPOSITORY" -o -z "$CODENAME" ]; then
  usage
  exit 1
fi

cd ${BASEDIR}/${REPOSITORY}/tmp/${CODENAME}
<% if @repo_umask -%>

# Override default umask
OLDMASK=$(umask)
umask <%= @repo_umask %>

<% end -%>

if $CHANGES; then
  # Move .changes files to incoming dir, if present
  INCOMING=
  ls *.changes 2>/dev/null
  if [ $? -eq 0 ]; then
    # Check for param in config file
    if [ -f ${BASEDIR}/${REPOSITORY}/conf/incoming ]; then
      INCOMING=$(awk '/^IncomingDir:/ { print $2 }' ${BASEDIR}/${REPOSITORY}/conf/incoming)
    fi
    # Use param if present
    if [ -z $INCOMING ];then
      INCOMING_DIR="${BASEDIR}/${REPOSITORY}/incoming"
    else
      INCOMING_DIR="${BASEDIR}/${REPOSITORY}/${INCOMING}"
    fi
    # Check if dir exists and move files
    if [ -d ${INCOMING_DIR} ]; then
      mv *.changes ${INCOMING_DIR}/
      
    fi
  fi
fi

# Process .deb files, if present
ls *.deb 2>/dev/null
if [ $? -eq 0 ]; then 
  $REPREPRO -b ${BASEDIR}/${REPOSITORY} includedeb $CODENAME *.deb
  if [ $? -eq 0 ]; then rm -f *.deb; fi
  $REPREPRO -b ${BASEDIR}/${REPOSITORY} export $CODENAME;

  if ${SNAPSHOTS}; then
    SNAPDIR="${BASEDIR}/${REPOSITORY}/dists/${CODENAME}/snapshots"
    SNAPVER=$(if ls -d ${SNAPDIR}/[0-9]* &> /dev/null; then ls -d ${SNAPDIR}/[0-9]* | xargs -n 1 basename | sort -n | tail -1 | awk '{printf "%d", $1 + 1; exit}';else echo -n 0; fi)
    $REPREPRO -b ${BASEDIR}/${REPOSITORY} gensnapshot $CODENAME $SNAPVER
  fi
fi

# Process .udeb files, if present
if ${UDEB}; then
  ls *.udeb 2>/dev/null
  if [ $? -eq 0 ]; then
    $REPREPRO -b ${BASEDIR}/${REPOSITORY} includeudeb $CODENAME *.udeb
    if [ $? -eq 0 ]; then rm -f *.udeb; fi
    $REPREPRO -b ${BASEDIR}/${REPOSITORY} export $CODENAME;
  fi
fi

# Process source files (.dsc), if present
if ${SOURCE}; then
  ls *.dsc 2>/dev/null
  if [ $? -eq 0 ]; then
    for F in $(ls *.dsc|sort -Vr); do
      $REPREPRO -b ${BASEDIR}/${REPOSITORY} includedsc $CODENAME $F
      if [ $? -eq 0 ]; then
        awk '/^Files:/, /^[A-E,G-Z]/' $F | grep ^\  | awk '{ print $3}' | xargs rm -f
        rm $F
      fi
    done
    $REPREPRO -b ${BASEDIR}/${REPOSITORY} export $CODENAME;
  fi
fi

# Process .changes files, if present
if $CHANGES; then
  ls ${INCOMING_DIR}/*.changes 2>/dev/null
  if [ $? -eq 0 ]; then
    for F in $(ls ${INCOMING_DIR}/*.changes|sort -Vr); do
      $REPREPRO -b ${BASEDIR}/${REPOSITORY} include $CODENAME $F
    done
  fi   
fi
<% if @repo_umask -%>

# Reset umask to default
umask ${OLDMASK}
<% end -%>